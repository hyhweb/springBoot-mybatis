<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.mybatis.dao.TSysUserDao">

    <resultMap type="com.springboot.mybatis.entity.TSysUser" id="TSysUserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
               <result property="username" column="username" jdbcType="VARCHAR"/>
               <result property="password" column="password" jdbcType="VARCHAR"/>
               <result property="salt" column="salt" jdbcType="VARCHAR"/>
           </resultMap>




    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="TSysUserMap">
        select
          id, username, password, salt
        from test.t_sys_user
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="TSysUserMap">
        select
          id, username, password, salt
        from test.t_sys_user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="salt != null and salt != ''">
                and salt = #{salt}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into test.t_sys_user(username, password, salt)
        values (#{username}, #{password}, #{salt})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update test.t_sys_user
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="salt != null and salt != ''">
                salt = #{salt},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from test.t_sys_user where id = #{id}
    </delete>


    <!--嵌套查询 start-->
<!--    <select id="queryById" resultMap="userList">
        select
          id, username, password, salt
        from test.t_sys_user
        where id = #{id}
    </select>
    <resultMap id="UserResult" type="com.springboot.mybatis.entity.TSysUser">
        <collection property="roles" column="id" ofType="com.springboot.mybatis.entity.TSysRole" select="getRoleById">

        </collection>
    </resultMap>
    <select id="getRoleById" resultType="com.springboot.mybatis.entity.TSysRole">
        select * from t_sys_role as r,t_sys_user_role ur where r.role_id = ur.role_id and ur.user_id = #{id}
    </select>-->
    <!--嵌套查询 end-->

   <!-- 嵌套结果方法 start (需要在sql语句里面做关联) -->
<!--    <select id="queryById" resultMap="userList">
        select
         *
        from t_sys_user as u left outer join t_sys_user_role ur on u.id =ur.user_id
        where id = #{id}
    </select>
    <resultMap id="userList" type="com.springboot.mybatis.entity.TSysUser">
        <id property="id" column="id"></id>
        <result property="username" column="username"></result>
        <collection property="userRoles" ofType="com.springboot.mybatis.entity.TSysUserRole">
            <id property="userId" column="user_id"/>
            <result property="roleId" column="role_id"></result>
        </collection>
    </resultMap>-->
    <!-- 嵌套结果方法 end -->


<!--    一对一的嵌套查询 start-->
    <resultMap id="userList" type="com.springboot.mybatis.entity.TSysUser">
        <id property="id" column="id"></id>
        <result property="username" column="username"></result>
        <result property="password" column="password"></result>
        <result property="salt" column="salt"></result>
        <association property="testUser" column="id"
                     javaType="com.springboot.mybatis.entity.TTestUser"
                     select="getTestUser">
        </association>
    </resultMap>
    <select id="queryById" resultMap="userList">
        select
          *
        from t_sys_user
        where id = #{id}
    </select>

    <resultMap type="com.springboot.mybatis.entity.TTestUser" id="TTestUserMap">
        <result property="userTestId" column="user_test_id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="userOther" column="user_other" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="getTestUser" resultMap="com.springboot.mybatis.dao.TTestUserDao.TTestUserMap">
        select * from t_test_user  where t_test_user.user_id = #{id}
    </select>
<!--    所有的关联都可以引用其他mapper的Id的方法和resultMap-->
    <!--一对一的关联，被关联的select标签需要用resultMap,不能使用resultType.否则数据为null-->
    <!--    一对一的嵌套查询 end-->


    <!--    一对一的嵌套查询 方法2 start-->
    <!--<resultMap id="userList" type="com.springboot.mybatis.entity.TSysUser">
        <id property="id" column="id"></id>
        <result property="username" column="username"></result>
        <result property="password" column="password"></result>
        <result property="salt" column="salt"></result>
        <association property="testUser" column="{userTestId=id}"
                     javaType="com.springboot.mybatis.entity.TTestUser"
                     select="com.springboot.mybatis.dao.TTestUserDao.queryById">
        </association>
    </resultMap>
    <select id="queryById" resultMap="userList">
        select
          *
        from t_sys_user
        where id = #{id}
    </select>-->
<!--    association的select 可以直接调用其他接口来实现-->
    <!--    一对一的嵌套查询 方法2 end-->




   <!-- <resultMap id="userList" type="com.springboot.mybatis.entity.TSysUser">
        <id property="id" column="id"></id>
        <result property="username" column="username"></result>
        <result property="password" column="password"></result>
        <result property="salt" column="salt"></result>
        <association property="testUser" column="id"
                     javaType="com.springboot.mybatis.entity.TTestUser"
                     >
            <id property="userTestId" column="user_test_id"></id>
            <result property="userId" column="user_id"></result>
            <result property="userOther" column="user_other"></result>
        </association>
    </resultMap>
    <select id="queryById" resultMap="userList">
        select
          *
        from t_sys_user u left join t_test_user tu on u.id =tu.user_id
        where u.id = #{id}
    </select>-->
</mapper>